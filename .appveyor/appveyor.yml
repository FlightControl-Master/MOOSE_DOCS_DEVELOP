version: 2.7.5.d.{build}
shallow_clone: false
skip_branch_with_pr: false
skip_commits:
  message: /!nobuild/
skip_tags: false

environment:
  access_token_documentation:
    secure: ljvS8RWkAGh3SdKKjyEQ0BI0xy5zmsy1r6qNvJWI2H4wljwx/xE1XnrZYj6HNn4s
  LUAROCKS_VER: 2.4.1
  LUA_VER: 5.1.5
  LUA: lua5.3
  matrix:
  - LUA_VER: 5.1.5

platform:
  - x64

init:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
# Outcomment if lua environment invalidates and needs to be reinstalled, otherwise all will run from the cache.
#  - call choco install 7zip.commandline
#  - call choco install lua51
#  - call choco install luarocks
#  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
  - cmd: PATH = %PATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\bin
  - cmd: set LUA_PATH = %LUA_PATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\share\lua\5.1\?.lua;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\share\lua\5.1\?\init.lua
  - cmd: set LUA_CPATH = %LUA_CPATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\lib\lua\5.1\?.dll 
#  - call luarocks install checks
#  - call luarocks install luadocumentor


cache:
  - C:\ProgramData\chocolatey\lib
  - C:\ProgramData\chocolatey\bin

build_script:
  - ps: |
      git config --global core.autocrlf input 
      git checkout master 2>&1
      git clone -q --depth=1 -b "develop" https://github.com/FlightControl-Master/MOOSE_DOCS.git c:\Projects\Moose-Docs 
      dir c:\Projects
      dir
      echo "Removing old Documentation"
      $Exclude=@("LICENSE","README.md","\.*")
      #Get-ChildItem . -directory -exclude "$Exclude" | git rm -r $_.FullName
      Get-ChildItem . -directory -exclude "$Exclude" | ForEach-Object { git rm -r $_.FullName }
      # Clean the Moose_Docs files from the .appveyor folder
      # There is no .git folder.
      dir c:\Projects\Moose-Docs
      Remove-Item c:\Projects\Moose-Docs\.appveyor -Force -Recurse
      Remove-Item c:\Projects\Moose-Docs\.git -Force -Recurse
      cd c:\Projects\Moose-Docs-Develop
      Copy-Item -Path "c:\Projects\Moose-Docs\*" -Destination "." -Recurse -Force
      dir .
      echo "Commit to GITHUB"
      git config --global credential.helper store  
      Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token_documentation):x-oauth-basic@github.com`n" 
      git config --global user.email "post@tniedermeier.com" 
      git config --global user.name "Applevangelist" 
      git add . 2>&1
      git commit -m "MOOSE generated develop documentation [skip ci]" 2>&1 
      git push origin master 2>&1
      dir .

artifacts:
#  - path: 'Documentation\**\*'
#    name: Documentation

on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
 
 
